<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmbc.devops.dao.RegistryMapper">
	<resultMap id="BaseResultMap" type="com.cmbc.devops.entity.Registry">
		<id column="REGISTRY_ID" property="registryId" jdbcType="INTEGER" />
		<result column="REGISTRY_NAME" property="registryName"
			jdbcType="VARCHAR" />
		<result column="REGISTRY_PORT" property="registryPort"
			jdbcType="INTEGER" />
		<result column="REGISTRY_STATUS" property="registryStatus"
			jdbcType="TINYINT" />
		<result column="HOST_ID" property="hostId" jdbcType="INTEGER" />
		<result column="REGISTRY_DESC" property="registryDesc"
			jdbcType="VARCHAR" />
		<result column="REGISTRY_CREATETIME" property="registryCreatetime"
			jdbcType="TIMESTAMP" />
		<result column="REGISTRY_CREATOR" property="registryCreator"
			jdbcType="INTEGER" />
		<result column="TENANT_ID" property="tenantId" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ResultMapWithIP" type="com.cmbc.devops.entity.RegistryWithIP">
		<id column="REGISTRY_ID" property="registryId" jdbcType="INTEGER" />
		<result column="REGISTRY_NAME" property="registryName"
			jdbcType="VARCHAR" />
		<result column="REGISTRY_PORT" property="registryPort"
			jdbcType="INTEGER" />
		<result column="REGISTRY_STATUS" property="registryStatus"
			jdbcType="TINYINT" />
		<result column="HOST_ID" property="hostId" jdbcType="INTEGER" />
		<result column="HOST_IP" property="hostIP" jdbcType="VARCHAR" />
		<result column="REGISTRY_DESC" property="registryDesc"
			jdbcType="VARCHAR" />
		<result column="REGISTRY_CREATETIME" property="registryCreatetime"
			jdbcType="TIMESTAMP" />
		<result column="USER_NAME" property="creatorName" jdbcType="VARCHAR" />
		<result column="REGISTRY_CREATOR" property="registryCreator"
			jdbcType="INTEGER" />
		<result column="TENANT_ID" property="tenantId" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="RegSlaveImageMap" type="com.cmbc.devops.entity.RegistrySlaveImage">
		<id column="IMAGE_ID" property="imageId" jdbcType="INTEGER" />
		<result column="IMAGE_UUID" property="imageUuid" jdbcType="VARCHAR" />
		<result column="IMAGE_STATUS" property="imageStatus" jdbcType="TINYINT" />
		<result column="IMAGE_NAME" property="imageName" jdbcType="VARCHAR" />
		<result column="IMAGE_TAG" property="imageTag" jdbcType="VARCHAR" />
		<result column="IMAGE_SIZE" property="imageSize" jdbcType="INTEGER" />
		<result column="IMAGE_DESC" property="imageDesc" jdbcType="VARCHAR" />
		<result column="APP_ID" property="appId" jdbcType="INTEGER" />
		<result column="APP_NAME" property="appName" jdbcType="VARCHAR" />
		<result column="IMAGE_PORT" property="imagePort" jdbcType="VARCHAR" />
		<result column="IMAGE_CREATETIME" property="imageCreatetime"
			jdbcType="TIMESTAMP" />
		<result column="IMAGE_CREATOR" property="imageCreator"
			jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		REGISTRY_ID, REGISTRY_NAME, REGISTRY_PORT, REGISTRY_STATUS,
		HOST_ID,
		REGISTRY_DESC,
		REGISTRY_CREATETIME, REGISTRY_CREATOR, TENANT_ID
	</sql>

	<!-- select all -->
	<select id="selectAll" resultMap="BaseResultMap"
		parameterType="com.cmbc.devops.entity.Registry">
		select
		<include refid="Base_Column_List" />
		from dop_registry
		where 1=1 AND REGISTRY_STATUS!=0
		<if test="registryName!=null and registryName!=''">
			And REGISTRY_NAME like '%${registryName}%'
		</if>
		<if test="registryStatus!=null and registryStatus!=''">
			And REGISTRY_STATUS = #{registryStatus}
		</if>
		<if test="tenantId !=null and tenantId !=''">
			AND TENANT_ID = #{tenantId,jdbcType=INTEGER}
		</if>
		order by REGISTRY_CREATETIME desc
	</select>

	<select id="selectRegistryByHostId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from dop_registry
		where 1=1 AND REGISTRY_STATUS != 0
		AND HOST_ID =
		#{hostId,jdbcType=VARCHAR}
	</select>

	<!-- select all with ip address -->
	<select id="selectAllWithIP" resultMap="ResultMapWithIP"
		parameterType="com.cmbc.devops.entity.RegistryWithIP">
		select
		regi.REGISTRY_ID, regi.REGISTRY_NAME, regi.REGISTRY_PORT,
		regi.REGISTRY_STATUS,
		regi.HOST_ID, host.HOST_IP, regi.REGISTRY_DESC,
		regi.REGISTRY_CREATETIME, user.USER_NAME, regi.REGISTRY_CREATOR, regi.TENANT_ID
		from
		dop_registry regi, dop_host host ,dop_user user
		where
		regi.HOST_ID=host.HOST_ID
		AND regi.REGISTRY_STATUS!=0
		AND
		regi.REGISTRY_CREATOR=user.USER_ID
		<if test="registryStatus!=null and registryStatus!=''">
			AND regi.REGISTRY_STATUS = #{registryStatus}
		</if>
		<if test="registryName != null and registryName != ''">
			AND regi.REGISTRY_NAME LIKE CONCAT(CONCAT('%',
			#{registryName,jdbcType=VARCHAR}), '%')
		</if>
		<if test="registryPort!=null and registryPort!=''">
			AND regi.REGISTRY_PORT = #{registryPort}
		</if>
		<if test="registryDesc!=null and registryDesc!=''">
			And regi.REGISTRY_DESC like '%${registryDesc}%'
		</if>
		<if test="hostIP!=null and hostIP!=''">
			And host.HOST_IP like '%${hostIP}%'
		</if>
		<if test="creatorName!=null and creatorName!=''">
			And user.USER_NAME like '%${creatorName}%'
		</if>
		<if test="tenantId !=null and tenantId != 0">
			AND regi.TENANT_ID = #{tenantId,jdbcType=INTEGER}
		</if>
		ORDER BY regi.REGISTRY_CREATETIME DESC
	</select>

	<select id="selectRegistry" resultMap="BaseResultMap"
		parameterType="com.cmbc.devops.entity.Registry">
		select
		<include refid="Base_Column_List" />
		from dop_registry
		where 1=1 AND REGISTRY_STATUS != 0
		<if test="registryId!=null and registryId!=''">
			AND REGISTRY_ID = #{registryId}
		</if>
		<if test="registryName!=null and registryName!=''">
			AND REGISTRY_NAME = #{registryName}
		</if>
		<if test="registryPort!=null and registryPort!=''">
			AND REGISTRY_PORT = #{registryPort}
		</if>
		<if test="hostId!=null and hostId!=''">
			AND HOST_ID = #{hostId}
		</if>
		<if test="tenantId !=null and tenantId !=''">
			AND TENANT_ID = #{tenantId,jdbcType=INTEGER}
		</if>
	</select>

	<!-- 查询在一个仓库内部所有的镜像数据 -->
	<!-- @bug119 仓库管理:查看仓库所拥有镜像的方法不对,没有使用仓库的ID去检索,而是使用0全局所有仓库 ，已经修改。 -->
	<!-- select all image belong to unique registry -->
	<select id="selectAllImageInRegistry" resultMap="RegSlaveImageMap"
		parameterType="com.cmbc.devops.entity.RegIdImageType">
		SELECT
		img.IMAGE_ID,
		img.IMAGE_UUID,
		img.IMAGE_STATUS,
		img.IMAGE_NAME,
		img.IMAGE_TAG,
		img.IMAGE_SIZE,
		img.IMAGE_DESC,
		img.APP_ID,
		img.IMAGE_PORT,
		img.IMAGE_CREATETIME,
		img.IMAGE_CREATOR
		FROM
		dop_image
		img,
		dop_registry reg
		WHERE
		1 = 1
		<if test="registryId!=null and registryId!=''">
			And reg.REGISTRY_ID = #{registryId}
		</if>
		<if test="tenantId !=null and tenantId !=''">
			AND reg.TENANT_ID = #{tenantId,jdbcType=INTEGER}
		</if>
		AND reg.REGISTRY_STATUS != 0
		AND img.IMAGE_STATUS != 0
		AND img.IMAGE_ID
		IN (
		SELECT
		dop_reg_img.IMAGE_ID
		FROM
		dop_reg_img
		)
		AND reg.REGISTRY_ID IN (
		SELECT
		dop_reg_img.REGISTRY_ID
		FROM
		dop_reg_img
		)
	</select>

	<!-- delete by primary key -->
	<delete id="deleteRegistry" parameterType="java.lang.Integer">
		delete from
		dop_registry
		where REGISTRY_ID = #{registryId,jdbcType=INTEGER} AND
		REGISTRY_STATUS!=0
	</delete>

	<!-- add registry -->
	<insert id="insertRegistry" parameterType="com.cmbc.devops.entity.Registry">
		<selectKey resultType="java.lang.Integer" keyProperty="registryId"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into dop_registry
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="registryName != null and registryName != ''">
				REGISTRY_NAME,
			</if>
			<if test="registryPort != null ">
				REGISTRY_PORT,
			</if>
			<if test="registryStatus != null ">
				REGISTRY_STATUS,
			</if>
			<if test="hostId != null ">
				HOST_ID,
			</if>
			<if test="registryDesc != null and registryDesc != ''">
				REGISTRY_DESC,
			</if>
			<if test="registryCreatetime != null ">
				REGISTRY_CREATETIME,
			</if>
			<if test="registryCreator != null ">
				REGISTRY_CREATOR,
			</if>
			<if test="tenantId != null">
			    TENANT_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="registryName != null and registryName != ''">
				#{registryName,jdbcType=VARCHAR},
			</if>
			<if test="registryPort != null ">
				#{registryPort,jdbcType=INTEGER},
			</if>
			<if test="registryStatus != null ">
				#{registryStatus,jdbcType=TINYINT},
			</if>
			<if test="hostId != null ">
				#{hostId,jdbcType=INTEGER},
			</if>
			<if test="registryDesc != null and registryDesc != ''">
				#{registryDesc,jdbcType=VARCHAR},
			</if>
			<if test="registryCreatetime != null ">
				#{registryCreatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="registryCreator != null ">
				#{registryCreator,jdbcType=INTEGER},
			</if>
			<if test="tenantId != null">
				#{tenantId,jdbcType=INTEGER}
			</if>
		</trim>
	</insert>
	<!-- update Registry -->
	<update id="updateRegistry" parameterType="com.cmbc.devops.entity.Registry">
		update dop_registry
		<set>
			<if test="registryName != null and registryName != ''">
				REGISTRY_NAME = #{registryName,jdbcType=VARCHAR},
			</if>
			<if test="registryPort != null ">
				REGISTRY_PORT = #{registryPort,jdbcType=INTEGER},
			</if>
			<if test="registryStatus != null ">
				REGISTRY_STATUS = #{registryStatus,jdbcType=TINYINT},
			</if>
			<if test="hostId != null ">
				HOST_ID = #{hostId,jdbcType=INTEGER},
			</if>
			REGISTRY_DESC = #{registryDesc,jdbcType=VARCHAR},
			<if test="registryCreatetime != null ">
				REGISTRY_CREATETIME =
				#{registryCreatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="registryCreator != null ">
				REGISTRY_CREATOR = #{registryCreator,jdbcType=INTEGER},
			</if>
			<if test="tenantId != null">
				TENANT_ID = #{tenantId,jdbcType=INTEGER},
			</if>
		</set>
		where REGISTRY_ID = #{registryId,jdbcType=INTEGER} AND
		REGISTRY_STATUS!=0
	</update>
	<update id="changeStatus" parameterType="java.util.List">
		update dop_registry
		<set>
			REGISTRY_STATUS='0'
		</set>
		where REGISTRY_ID in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	<!-- update Registry -->
</mapper>